plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.springframework.cloud.contract' version '4.3.0'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
	id 'jacoco'
}

group = 'com.github.vitorhenriquec'
version = '0.0.1-SNAPSHOT'
description = 'A account core implementation'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'io.rest-assured:spring-web-test-client'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

contracts {
	testMode = 'WebTestClient'
	failOnNoContracts = false
}

allOpen {
	annotation 'jakarta.persistence.Entity'
	annotation 'jakarta.persistence.MappedSuperclass'
	annotation 'jakarta.persistence.Embeddable'
}

tasks.named('contractTest') {
	useJUnitPlatform()
}

tasks.named('test') {
	maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
	useJUnitPlatform()
	finalizedBy(tasks.jacocoTestReport)
}

tasks.named("jacocoTestReport") {
	executionData(file("${project.buildDir}/jacoco/test.exec"))

	reports {
		html.required.set(true)
		xml.required.set(false)
	}

	classDirectories.setFrom(
			files(
					classDirectories.files.collect {
						fileTree(it) {
							exclude("**/accountcore/AccountcoreApplication**")
							exclude("**/entities/**")
							exclude("**/configurations/**")
						}
					}
			)
	)
}
